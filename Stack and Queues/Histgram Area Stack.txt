#include<iostream>
#include<stack>
#define ll long long int
using namespace std;

ll largestArea(ll hist[], ll n){

	stack<ll>st;
	ll max_area = 0;
	ll top;
	ll area_top;

	ll i=0;
	while(i<n){
		if(st.empty() || hist[st.top()]<=hist[i]){
			st.push(i++);
		}
		else{
			top = st.top();
			st.pop();

			area_top = hist[top] * (st.empty() ? i : i-st.top()-1);
			if(max_area < area_top){
				max_area = area_top;
			}
		}
	}
	while(!st.empty()){
		top = st.top();
		st.pop();
		area_top = hist[top] * (st.empty() ? i : i-st.top()-1);
		if(max_area < area_top){
			max_area = area_top;
		}
	}
	return max_area;
}

int main()
{
	ll n;
	cin>>n;
	ll hist[n];
	for(ll i=0;i<n;i++){
		cin>>hist[i];
	}
	cout<<largestArea(hist,n)<<endl;
	return 0;
}