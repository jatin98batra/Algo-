#include <iostream>
using namespace std;
int binarySearch(int a[], int n, int m){
    int start = 0, end = n-1;
    while(start<=end){
        int mid = (start+end)/2;
        if(a[mid]==m){
            return mid;
        }
        else if(a[mid]>m){
            end = mid-1;
        }
        else{
            start = mid+1;
        }
       
    }
     return -1;

}
int findUpperBound(int a[],int n, int key){
    int index = binarySearch(a,n,key);
   
    int upper = index;
    while(index!= n-1 && a[index+1]==key){
        upper++;
        index++;
    }
    return upper;
}

int findLowerBound(int a[],int n, int key){
    int index = binarySearch(a,n,key);
    
    int lower = index;
    while(index!= 0 && a[index-1]==key){
        lower--;
        index--;
    }
    return lower;
}
int main() {
    int n,test;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    cin>>test;
    while(test--){
        int key;
        cin>>key;
        int upper_bound, lower_bound;
        lower_bound = findLowerBound(a,n,key);
        upper_bound = findUpperBound(a,n,key);
        cout<<lower_bound<<" "<<upper_bound<<endl;

    }
}