#include <iostream>
using namespace std;
class tree{
    public:
    int data;
    tree* left;
    tree* right;
    tree(int d){
        data = d;
        left = NULL;
        right = NULL;
    }
};

tree * makeTree(int *pre, int *in, int start, int end){
    if(start>end){
        return NULL;
    }
    //rec case
 
    static int i = 0;
    tree *root = new tree(pre[i]);
    //linear search
    int j = 0;
    for(j = start; j<=end; j++){
        if(in[j] == pre[i]){
            break;
        }
    }
    i++;
    root->left = makeTree(pre,in,start,j-1);
    root->right = makeTree(pre,in, j+1, end);
    return root;
}

void display(tree * root){
    if(root == NULL){
        return;
    }
    if(root->left){
        cout<<root->left->data<<"";
    }
    else{
        cout<<"END";
    }

    //print node
    cout<<" => "<<root->data<<" <= ";

    //print right
    if(root->right){
        cout<<root->right->data<<" ";
    }
    else{
        cout<<"END\n";
    }
    display(root->left);
    display(root->right);

}

int main() {
   int n1,n2;
     cin>>n1;
   int pre[n1];

   for(int i = 0; i<n1;i++){
       cin>>pre[i];
   }
   
   cin>>n2;
   int in[n2];
   for(int i = 0; i<n2;i++){
       cin>>in[i];
   }

   tree *root = makeTree(pre,in, 0, n1 - 1);
   
   display(root);
}
